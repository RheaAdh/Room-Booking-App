# Spring Boot Application Properties

# Server Configuration
server.port=${PORT:8082}

# Database Configuration (will be overridden by Render)
# For local development with PostgreSQL
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/room_booking_db}
spring.datasource.username=${DB_USERNAME:roombooking}
spring.datasource.password=${DB_PASSWORD:roombooking123}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# CORS Configuration
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:8082}
cors.allowed-methods=${CORS_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_HEADERS:*}
cors.allow-credentials=${CORS_CREDENTIALS:false}

# Logging
logging.level.com.example.profpride=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# JWT Configuration
jwt.secret=${JWT_SECRET:123}
jwt.expiration=${JWT_EXPIRATION:123}

# Cloudinary Configuration
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME:123}
cloudinary.api_key=${CLOUDINARY_API_KEY:123}
cloudinary.api_secret=${CLOUDINARY_API_SECRET:123}